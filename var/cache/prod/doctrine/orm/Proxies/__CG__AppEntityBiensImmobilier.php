<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class BiensImmobilier extends \App\Entity\BiensImmobilier implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\BiensImmobilier' . "\0" . 'id', '' . "\0" . 'App\\Entity\\BiensImmobilier' . "\0" . 'type', '' . "\0" . 'App\\Entity\\BiensImmobilier' . "\0" . 'surface', '' . "\0" . 'App\\Entity\\BiensImmobilier' . "\0" . 'prix', '' . "\0" . 'App\\Entity\\BiensImmobilier' . "\0" . 'localisation', '' . "\0" . 'App\\Entity\\BiensImmobilier' . "\0" . 'dateDeCreation', '' . "\0" . 'App\\Entity\\BiensImmobilier' . "\0" . 'images', '' . "\0" . 'App\\Entity\\BiensImmobilier' . "\0" . 'author', '' . "\0" . 'App\\Entity\\BiensImmobilier' . "\0" . 'reservateur'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\BiensImmobilier' . "\0" . 'id', '' . "\0" . 'App\\Entity\\BiensImmobilier' . "\0" . 'type', '' . "\0" . 'App\\Entity\\BiensImmobilier' . "\0" . 'surface', '' . "\0" . 'App\\Entity\\BiensImmobilier' . "\0" . 'prix', '' . "\0" . 'App\\Entity\\BiensImmobilier' . "\0" . 'localisation', '' . "\0" . 'App\\Entity\\BiensImmobilier' . "\0" . 'dateDeCreation', '' . "\0" . 'App\\Entity\\BiensImmobilier' . "\0" . 'images', '' . "\0" . 'App\\Entity\\BiensImmobilier' . "\0" . 'author', '' . "\0" . 'App\\Entity\\BiensImmobilier' . "\0" . 'reservateur'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (BiensImmobilier $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getType(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType(string $type): \App\Entity\BiensImmobilier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getSurface(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSurface', []);

        return parent::getSurface();
    }

    /**
     * {@inheritDoc}
     */
    public function setSurface(float $surface): \App\Entity\BiensImmobilier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSurface', [$surface]);

        return parent::setSurface($surface);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrix(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrix', []);

        return parent::getPrix();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrix(float $prix): \App\Entity\BiensImmobilier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrix', [$prix]);

        return parent::setPrix($prix);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocalisation(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocalisation', []);

        return parent::getLocalisation();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocalisation(string $localisation): \App\Entity\BiensImmobilier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocalisation', [$localisation]);

        return parent::setLocalisation($localisation);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateDeCreation(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateDeCreation', []);

        return parent::getDateDeCreation();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateDeCreation(\DateTimeInterface $dateDeCreation): \App\Entity\BiensImmobilier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateDeCreation', [$dateDeCreation]);

        return parent::setDateDeCreation($dateDeCreation);
    }

    /**
     * {@inheritDoc}
     */
    public function getImages(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImages', []);

        return parent::getImages();
    }

    /**
     * {@inheritDoc}
     */
    public function setImages(string $images): \App\Entity\BiensImmobilier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImages', [$images]);

        return parent::setImages($images);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthor(): ?\App\Entity\Membres
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthor', []);

        return parent::getAuthor();
    }

    /**
     * {@inheritDoc}
     */
    public function setAuthor(?\App\Entity\Membres $author): \App\Entity\BiensImmobilier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuthor', [$author]);

        return parent::setAuthor($author);
    }

    /**
     * {@inheritDoc}
     */
    public function getReservateur(): ?\App\Entity\Membres
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReservateur', []);

        return parent::getReservateur();
    }

    /**
     * {@inheritDoc}
     */
    public function setReservateur(?\App\Entity\Membres $reservateur): \App\Entity\BiensImmobilier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReservateur', [$reservateur]);

        return parent::setReservateur($reservateur);
    }

}
